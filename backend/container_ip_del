#!/bin/bash

# connect containers to the lxc network bridge

# $1 = pupil/expert or module, if student
# $2 = level
# $3 = number of containers
# $4 = interface [default = eno1]

function cd_return {
    echo -n "[$(basename "$0")] DONE: return to path: "; cd -                                                           # cd to former working dir
}
trap cd_return EXIT                                                                                                     # trap 'EXIT', run cd_return first

<<<<<<< HEAD
cd $(dirname "$0") ; . log_with_timestamp                                                                               # cd to path/to/$0, call log_with_timestamp
=======
cd $(dirname "$0") ; . ./log_with_timestamp                                                                 # cd to path/to/$0, call log_with_timestamp
>>>>>>> change: fix .sh suffix in scripts
echo "[$(basename "$0")] CALL: $@"

if [ "$#" -eq 4 ] || [ "$#" -eq 3 ]                                                                                     # only two or three parameters allowed
then
    case $1 in      # FIXME: put this in .CONF
        pupils)     module=1 ;;
        networks)   module=2 ;;
        netsec)     module=3 ;;
        experts)    module=0 ;;
    esac

    if [ "$#" -eq 3 ]; then interface=eno1; else interface="$4"; fi                                                     # default $interface = eno1
    if [ "$2" -lt 10 ]; then level_=0"$2"; else level_="$2"; fi                                                         # adjust for two-digit number sheme

    for ((container = 1; container <= "$3"; container++)); do
        if [ "$container" -lt 10 ]; then container_=0"$container"; else container_="$container"; fi
        echo "[$(basename "$0")] STEP: add IP to container $container_"
        lxc exec $1-lvl"$level_"-$USER-c"$container_" -- ip link set dev "$interface" down                              # inside container: change device state to 'down'
        lxc exec $1-lvl"$level_"-$USER-c"$container_" -- ip addr del 10.$module."$2"."$container"/24 dev "$interface"   # inside container: delete ip address
        lxc config device remove $1-lvl"$level_"-$USER-c"$container_" "$interface"                                      # on host: delete interface from container
    done

    echo "[$(basename "$0")] STEP: try target container"
    lxc exec $1-lvl"$level_"-$USER-target -- ip link set dev "$interface" down &&
    lxc exec $1-lvl"$level_"-$USER-target -- ip addr del 10.$module."$2".0/24 dev "$interface" &&
    lxc config device remove $1-lvl"$level_"-$USER-target "$interface" || echo "no target container found."

    echo "[$(basename "$0")] DONE: removed network from containers for level $2 in module $1."
    exit 0
else
    echo "[$(basename "$0")] FAIL: invalid number of parameters"
    exit 1
fi
