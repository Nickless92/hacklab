#!/bin/bash

# set up given number of containers of a level (stopped, not running)

# $1 = level
# $2 = number of containers
# $3 = optional: fingerprint of ISO [default = alpine-iso-utils]

function cd_return {
    echo -n "[$(basename "$0")] DONE: return to path: "; cd -                                       # cd to former working dir
}
trap cd_return EXIT                                                                                 # trap 'exit', run cd_return first

cd $(dirname "$0") ; . ./log_with_timestamp                                                         # cd to path/to/$0, 'source' log_with_timestamp
echo "[$(basename "$0")] CALL: $@"

if [ "$#" -eq 3 ] || [ "$#" -eq 2 ] ; then                                                          # only two or three parameters allowed
    if [ "$#" -eq 2 ]; then image="iso-alpine-utils"; else image="$3"; fi                           # if two parameters, use default ISO
    if [ "$1" -lt 10 ]; then level_=0"$1"; else level_="$1"; fi                                     # adjust for two-digit number sheme
    for (( container=1; container <= "$2"; container++ )); do
        if [ "$container" -lt 10 ]; then container_=0"$container"; else container_="$container"; fi
        echo "[$(basename "$0")] STEP: init container $container_"
        lxc init -p hacklab "$image" lvl"$level_"-c"$container_"                                    # profile = 'hacklab', image = $image
    done
    echo "[$(basename "$0")] DONE: created containers for level $level"
    exit 0
else
    echo "[$(basename "$0")] FAIL: invalid number of parameters"
    exit 1
fi
