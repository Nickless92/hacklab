#!/bin/bash

# stop containers of a level

# $1 = pupil/expert or module, if student
# $2 = level
# $3 = number of containers

function cd_return {
    echo -n "[$(basename "$0")] DONE: return to path: "; cd -                                           # cd to former working dir
}
trap cd_return EXIT                                                                                     # trap 'exit', run cd_return first

cd $(dirname "$0") ; . ./log_with_timestamp                                                             # cd to path/to/$0, call log_with_timestamp
echo "[$(basename "$0")] CALL: $@"

if [ $# = 3 ] ; then                                                                                    # only two parameters allowed
    case $1 in      # FIXME: put this in .CONF
        pupils)     module=1 ;;
        networks)   module=2 ;;
        netsec)     module=3 ;;
        experts)    module=0 ;;
    esac
    if [ "$2" -lt 10 ]; then level_=0"$2"; else level_="$2"; fi                                         # adjust for two-digit number sheme
    for((container = 1; container <= "$3"; container++)) ; do                                           # cycle through all containers of a level
        if [ "$container" -lt 10 ]; then container_=0"$container"; else container_="$container"; fi
        echo "[$(basename "$0")] STEP: stop container $container_"
        lxc stop $1-lvl"$level_"-c"$container_"-$USER                                                            # only STOPS the given lxc container
    done
    echo "[$(basename "$0")] STEP: try target container"
    lxc stop $1-lvl"$level_"-target-$USER                                                                        # in case there is a target VM - FIXME: catch this
    echo "[$(basename "$0")] DONE: stopped containers for level $2 in module $1."
    exit 0
else
    echo "[$(basename "$0")] FAIL: invalid number of parameters"
    exit 1
fi
