#!/bin/bash

# start a whole level with given number of containers
# $1 = pupil/expert or module, if student
# $2 = level
# $3 = number of containers

function cd_return {
    echo -n "[$(basename "$0")] DONE: return to path: "; cd -                           # cd to former working dir
}
trap cd_return EXIT                                                                     # trap 'exit', run cd_return first

cd $(dirname "$0") ; . log_with_timestamp                                               # cd to path/to/$0, 'source' log_with_timestamp
echo "[$(basename "$0")] CALL: $@"

if [ "$#" -eq 3 ] ; then                                                                # only three parameters allowed - FIXME: check for more complex calls
    echo "[$(basename "$0")] STEP: init containers"; ./container_create "$1" "$2" "$3"  # creates $3 containers (stopped, with profile 'hacklab')
    echo "[$(basename "$0")] STEP: start containers"; ./container_start "$1" "$2" "$3"  # changes container state (stopped -> running)
    echo "[$(basename "$0")] STEP: add network IPs"; ./container_ip_add "$1" "$2" "$3"  # adds network addresses (general sheme: 10.10.level.container/24)
    echo "[$(basename "$0")] DONE: started level $2 with $3 containers for module $1."  # so only containers within a level can reach each other (net mask /24)
    exit 0
else
    echo "[$(basename "$0")] FAILED: invalid number of parameters: $#"
    exit 1
fi
